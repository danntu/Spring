<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<bean id="studentBean" class="javatpoint.other.Student">-->
    <!--<property name="name" value="Danik"></property>-->
    <!--<property name="age" value="32"></property>-->
    <!--</bean>-->
    <!--<bean id="empwithId" class="javatpoint.emp.Employee">-->
    <!--<constructor-arg value="1" type="int"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="empwithName" class="javatpoint.emp.Employee">-->
    <!--<constructor-arg value="Danik"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="empwithIdName" class="javatpoint.emp.Employee">-->
    <!--<constructor-arg value="2" type="int"></constructor-arg>-->
    <!--<constructor-arg value="Danik2" ></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="address" class="javatpoint.ci_with_dependobject.Address">-->
    <!--<constructor-arg value="Almaty"></constructor-arg>-->
    <!--<constructor-arg value="Almaty"></constructor-arg>-->
    <!--<constructor-arg value="Kazakhstan"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="empwithdepobject" class="javatpoint.ci_with_dependobject.Employee">-->
    <!--<constructor-arg value="1" type="int"></constructor-arg>-->
    <!--<constructor-arg value="Employee with Depend Object"></constructor-arg>-->
    <!--<constructor-arg><ref bean="address"/></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="question" class="javatpoint.ci_with_collection.Question">-->
    <!--<constructor-arg value="111"></constructor-arg>-->
    <!--<constructor-arg value="What is java?"></constructor-arg>-->
    <!--<constructor-arg>-->
    <!--<list>-->
    <!--<value>Java is programming language</value>-->
    <!--<value>Java is a Platform</value>-->
    <!--<value>Java is an Island of Indonesia</value>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="answer1" class="javatpoint.ci_with_collection2.Answer">-->
    <!--<constructor-arg value="1"></constructor-arg>-->
    <!--<constructor-arg value="Java is a programming language"></constructor-arg>-->
    <!--<constructor-arg value="Danik"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="answer2" class="javatpoint.ci_with_collection2.Answer">-->
    <!--<constructor-arg value="2"></constructor-arg>-->
    <!--<constructor-arg value="Java is a platform"></constructor-arg>-->
    <!--<constructor-arg value="Moldir"></constructor-arg>-->
    <!--</bean>-->


    <!--<bean id="questionwithNonStringCollection" class="javatpoint.ci_with_collection2.Question">-->
    <!--<constructor-arg value="123"></constructor-arg>-->
    <!--<constructor-arg value="What is Java"></constructor-arg>-->
    <!--<constructor-arg>-->
    <!--<list>-->
    <!--<ref bean="answer1"></ref>-->
    <!--<ref bean="answer2"></ref>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="questionMap" class="javatpoint.ci_with_map.Question">-->
    <!--<constructor-arg value="111"></constructor-arg>-->
    <!--<constructor-arg value="What is Java?"></constructor-arg>-->
    <!--<constructor-arg>-->
    <!--<map>-->
    <!--<entry key="Java is a Programming Language" value="Daniyar Myrzakanov"></entry>-->
    <!--<entry key="Java is a Platform" value="Moldir Iskakova"></entry>-->
    <!--<entry key="Java is an Island" value="Test Testova"></entry>-->
    <!--</map>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="ansmap1" class="javatpoint.ci_with_map2.Answer">-->
    <!--<constructor-arg value="1"></constructor-arg>-->
    <!--<constructor-arg value="Java is a Programming Lamguage"></constructor-arg>-->
    <!--<constructor-arg value="2018"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="ansmap2" class="javatpoint.ci_with_map2.Answer">-->
    <!--<constructor-arg value="2"></constructor-arg>-->
    <!--<constructor-arg value="Java is a Platform"></constructor-arg>-->
    <!--<constructor-arg value="2017"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="usermap1" class="javatpoint.ci_with_map2.User">-->
    <!--<constructor-arg value="1"></constructor-arg>-->
    <!--<constructor-arg value="Daniyar Myrzakanov"></constructor-arg>-->
    <!--<constructor-arg value="dmyrzakonov@gmail.com"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="usermap2" class="javatpoint.ci_with_map2.User">-->
    <!--<constructor-arg value="2"></constructor-arg>-->
    <!--<constructor-arg value="Iskakova Moldir"></constructor-arg>-->
    <!--<constructor-arg value="iskakova@gmail.com"></constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="questionMap2" class="javatpoint.ci_with_map2.Question">-->
    <!--<constructor-arg value="1"></constructor-arg>-->
    <!--<constructor-arg value="What is Java"></constructor-arg>-->
    <!--<constructor-arg>-->
    <!--<map>-->
    <!--<entry key-ref="ansmap1" value="usermap1"></entry>-->
    <!--<entry key-ref="ansmap2" value="usermap2"></entry>-->
    <!--</map>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--Constructor Inheriting-->
    <bean id="emp1" class="javatpoint.ci_inheriting_bean.Employee">
        <constructor-arg value="101"></constructor-arg>
        <constructor-arg value="Danik"></constructor-arg>
    </bean>
    <bean id="address1" class="javatpoint.ci_inheriting_bean.Address">
        <constructor-arg value="Asyl Arman 4h 167f"></constructor-arg>
        <constructor-arg value="Almaty"></constructor-arg>
        <constructor-arg value="Almaty"></constructor-arg>
        <constructor-arg value="Kazakhstan"></constructor-arg>
    </bean>
    <bean id="emp2" class="javatpoint.ci_inheriting_bean.Employee" parent="emp1">
        <constructor-arg ref="address1"></constructor-arg>
    </bean>

    <!--Dependency Injection by setter method -->
    <bean id="setter" class="javatpoint.setter_injection.Employee">
        <property name="id">
            <value>1</value>
        </property>
        <property name="name">
            <value>Daniyar</value>
        </property>
        <property name="city">
            <value>Almaty</value>
        </property>
    </bean>

    <!--Setter Injection with Dependent Object Example-->
    <bean id="addressSetter" class="javatpoint.si_dependent_object.Address">
        <property name="addressLine1" value="Asyl Arman 4h 167f"></property>
        <property name="city" value="Almaty"></property>
        <property name="state" value="Almaty"></property>
        <property name="country" value="Kazakhstan"></property>
    </bean>
    <bean id="object" class="javatpoint.si_dependent_object.Employee">
        <property name="id" value="1"></property>
        <property name="name" value="Danik"></property>
        <property name="address" ref="addressSetter"></property>
    </bean>
    <!--Setter Injection with Collection Example-->
    <bean id="questionlist" class="javatpoint.si_with_collection.Question">
        <property name="id" value="1"></property>
        <property name="name" value="What is Java?"></property>
        <property name="answers">
            <list>
                <value>Java is a programming language</value>
                <value>Java is a platform</value>
                <value>Java is an Island</value>
            </list>
        </property>
    </bean>
    <!--Setter Injection with Non-String Collection (having Dependent Object) Example-->
    <bean id="answersetter1" class="javatpoint.si_with_collection2.Answer">
        <property name="id" value="1"></property>
        <property name="name" value="Java is a programming language"></property>
        <property name="postedBy" value="Daniyar"></property>
    </bean>
    <bean id="answersetter2" class="javatpoint.si_with_collection2.Answer">
        <property name="id" value="2"></property>
        <property name="name" value="Java is a platform"></property>
        <property name="postedBy" value="Moldir"></property>
    </bean>

    <bean id="questionlist2" class="javatpoint.si_with_collection2.Question">
        <property name="id" value="1"></property>
        <property name="name" value="What is Java?"></property>
        <property name="answers">
            <list>
                <ref bean="answersetter1"></ref>
                <ref bean="answersetter2"></ref>
            </list>
        </property>
    </bean>
    <!--Setter Injection with Map Example-->
    <bean id="questionmap" class="javatpoint.si_with_map.Question">
        <property name="id" value="1"></property>
        <property name="name" value="What is Java?"></property>
        <property name="answers">
            <map>
                <entry key="Java is a programming language" value="Myrzakanov Daniyar"></entry>
                <entry key="Java is a platform" value="Iskakova Moldir"></entry>
            </map>
        </property>
    </bean>
    <!--Setter Injection with Non-String Map (having dependent Object) Example-->
    <bean id="mapanswer1" class="javatpoint.si_with_map2.Answer">
        <constructor-arg value="1"></constructor-arg>
        <constructor-arg value="Java is a Programming Language"></constructor-arg>
        <constructor-arg value="06/09/2018"></constructor-arg>
    </bean>
    <bean id="mapanswer2" class="javatpoint.si_with_map2.Answer">
        <constructor-arg value="2"></constructor-arg>
        <constructor-arg value="Java is a platform"></constructor-arg>
        <constructor-arg value="07/09/2018"></constructor-arg>
    </bean>
    <bean id="mapuser1" class="javatpoint.si_with_map2.User">
        <constructor-arg value="1"></constructor-arg>
        <constructor-arg value="Myrzakanov Daniyar"></constructor-arg>
        <constructor-arg value="dan_ntu@mail.ru"></constructor-arg>
    </bean>
    <bean id="mapuser2" class="javatpoint.si_with_map2.User">
        <constructor-arg value="2"></constructor-arg>
        <constructor-arg value="Iskakova Moldir"></constructor-arg>
        <constructor-arg value="iskakova@mail.ru"></constructor-arg>
    </bean>
    <bean id="mapquestion2" class="javatpoint.si_with_map2.Question">
        <property name="id" value="1"></property>
        <property name="name" value="What is Java?"></property>
        <property name="answers">
            <map>
                <entry key-ref="mapanswer1" value-ref="mapuser1"></entry>
                <entry key-ref="mapanswer2" value-ref="mapuser2"></entry>
            </map>
        </property>
    </bean>
    <!--Example of autowiring-->
    <!--byName autowiring mode-->
    <!--<bean id="a" class="javatpoint.autowiring.A" autowire="byName"></bean>-->
    <!--<bean id="b" class="javatpoint.autowiring.B"></bean>-->
    <!--byType autowiring mode-->
    <!--<bean id="a" class="javatpoint.autowiring.A" autowire="byType"></bean>-->
    <!--<bean id="b1" class="javatpoint.autowiring.B"></bean>-->

    <!--<bean id="factorymethodA" class="javatpoint.fabric_method.type1.A" factory-method="getA"></bean>-->
    <!--<bean id="printa" class="javatpoint.fabric_method.type2.PrintableFactory" factory-method="getPrintableA"></bean>-->
    <!--<bean id="printb" class="javatpoint.fabric_method.type2.PrintableFactory" factory-method="getPrintableB"></bean>-->
    <!--<bean id="pfactory" class="javatpoint.fabric_method.type3.PrintableFactory"></bean>-->
    <!--<bean id="p" class="javatpoint.fabric_method.type3.PrintableFactory" factory-method="getPrintable"-->
    <!--factory-bean="pfactory"></bean>-->
    <!--&lt;!&ndash;MethodBeforeAdvice Example&ndash;&gt;-->
    <!--<bean id="obj" class="javatpoint.springaop.methodbeforeadvice.A"></bean>-->
    <!--<bean id="beforeadvisor" class="javatpoint.springaop.methodbeforeadvice.BeforeAdvisor"></bean>-->
    <!--<bean id="proxy1" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--<property name="target" ref="obj"></property>-->
    <!--<property name="interceptorNames">-->
    <!--<list>-->
    <!--<value>beforeadvisor</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--<bean id="obj2" class="javatpoint.springaop.afterreturningadvice.A"></bean>-->
    <!--<bean id="afteradvisor" class="javatpoint.springaop.afterreturningadvice.AfterAdvisor"></bean>-->
    <!--<bean id="proxy2" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--<property name="target" ref="obj2"></property>-->
    <!--<property name="interceptorNames">-->
    <!--<list>-->
    <!--<value>afteradvisor</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="obj3" class="javatpoint.springaop.methodinterceptor.A"></bean>-->
    <!--<bean id="aroundadvisor" class="javatpoint.springaop.methodinterceptor.AroundAdvisor"></bean>-->
    <!--<bean id="proxy3" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--<property name="target" ref="obj3"></property>-->
    <!--<property name="interceptorNames">-->
    <!--<list>-->
    <!--<value>aroundadvisor</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="obj4" class="javatpoint.springaop.throwadvice.Validator"></bean>-->
    <!--<bean id="throwadvisor" class="javatpoint.springaop.throwadvice.ThrowsAdvisor"></bean>-->

    <!--<bean id="proxy4" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--<property name="target" ref="obj4"></property>-->
    <!--<property name="interceptorNames">-->
    <!--<list>-->
    <!--<value>throwadvisor</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="opBean" class="javatpoint.springaop.aspectannotation.before.Operation"></bean>-->
    <!--<bean id="trackMyBean" class="javatpoint.springaop.aspectannotation.before.TrackOperation"></bean>-->

    <!--&lt;!&ndash;<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator"></bean>&ndash;&gt;-->

    <!--<bean id="opBean2" class="javatpoint.springaop.aspectannotation.after.Operation"></bean>-->
    <!--<bean id="trackMyBean2" class="javatpoint.springaop.aspectannotation.after.TrackOperation"></bean>-->

    <!--<bean id="opBean3" class="javatpoint.springaop.aspectannotation.afterreturning.Operation"></bean>-->
    <!--<bean id="trackMyBean3" class="javatpoint.springaop.aspectannotation.afterreturning.TrackOperation"></bean>-->

    <!--<bean id="opBean4" class="javatpoint.springaop.aspectannotation.around.Operation"></bean>-->
    <!--<bean id="trackMyBean4" class="javatpoint.springaop.aspectannotation.around.TrackOperation"></bean>-->

    <!--<bean id="opBean5" class="javatpoint.springaop.aspectannotation.autothrowing.Operation"></bean>-->
    <!--<bean id="trackMyBean5" class="javatpoint.springaop.aspectannotation.autothrowing.TrackOperation"></bean>-->

    <!--<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator"></bean>-->

    <aop:aspectj-autoproxy/>
    <!--<bean id="opBean6" class="javatpoint.springaop.aspectjxml.before.Operation"></bean>-->
    <!--<bean id="trackAspect" class="javatpoint.springaop.aspectjxml.before.TrackOperation"></bean>-->
    <!--<aop:config>-->
    <!--<aop:aspect id="myaspect" ref="trackAspect">-->
    <!--<aop:pointcut id="pointCutBefore"-->
    <!--expression="execution(* javatpoint.springaop.aspectjxml.before.Operation.*(..))"/>-->
    <!--<aop:before method="myadvice" pointcut-ref="pointCutBefore"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!--<bean id="opBean7" class="javatpoint.springaop.aspectjxml.after.Operation"></bean>-->
    <!--<bean id="trackAspect" class="javatpoint.springaop.aspectjxml.after.TrackOperation"></bean>-->

    <!--<aop:config>-->
    <!--<aop:aspect id="myaspect" ref="trackAspect">-->
    <!--&lt;!&ndash; @After &ndash;&gt;-->
    <!--<aop:pointcut id="pointCutAfter"-->
    <!--expression="execution(* javatpoint.springaop.aspectjxml.after.Operation.*(..))"/>-->
    <!--<aop:after method="myadvice" pointcut-ref="pointCutAfter"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->
    <bean id="opBean8" class="javatpoint.springaop.aspectjxml.afterreturning.Operation"></bean>

    <bean id="trackAspect" class="javatpoint.springaop.aspectjxml.afterreturning.TrackOperation"></bean>

    <aop:config>
        <aop:aspect id="myaspect" ref="trackAspect">
            <!-- @AfterReturning -->
            <aop:pointcut id="pointCutAfterReturning"
                          expression="execution(* javatpoint.springaop.aspectjxml.afterreturning.Operation.*(..))"/>
            <aop:after-returning method="myadvice" returning="result" pointcut-ref="pointCutAfterReturning"/>
        </aop:aspect>
    </aop:config>
    <!--Mysql connection-->
    <!--<bean id="mysql" class="org.springframework.jdbc.datasource.DriverManagerDataSource"></bean>-->
</beans>